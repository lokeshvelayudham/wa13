import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import bernoulli

# Define the hypotheses as functions
def h3(n):
    return 0.5 + 0.25 * np.sin(np.pi * n / 100)

def h4(n):
    return 0.5 + 0.25 * np.sin(2 * np.pi * n / 100)

# Generate datasets for h3 and h4
data_h3 = bernoulli.rvs(h3(np.arange(1, 101)))
data_h4 = bernoulli.rvs(h4(np.arange(1, 101)))

# Calculate posterior probabilities P(hi|d1,...,dN) for i=1,...,5
# Assuming uniform priors for h1, h2, h4, h5 and prior of h3 to be 0.9
# Since the problem statement specifies the data is generated by h5, we assume h5 is the true hypothesis
# Priors
priors = [0.1/4, 0.1/4, 0.9, 0.1/4, 0.1/4]

# Likelihood function (assuming a binary outcome, with 1 being the "success")
def likelihood(data, hypothesis):
    # Bernoulli likelihood
    return np.prod(hypothesis(data) ** data * (1 - hypothesis(data)) ** (1 - data))

# Posterior probability
def posterior(data, hypothesis, prior):
    return likelihood(data, hypothesis) * prior

# Initialize arrays to store the probabilities
post_probs_h3 = np.zeros(100)
post_probs_h4 = np.zeros(100)

# Calculate posterior probabilities for N varying from 1 to 100
for N in range(1, 101):
    # Update the datasets for each N
    data_N_h3 = data_h3[:N]
    data_N_h4 = data_h4[:N]
    
    # Calculate posterior for h3 and h4
    post_probs_h3[N-1] = posterior(data_N_h3, h3, priors[2])
    post_probs_h4[N-1] = posterior(data_N_h4, h4, priors[3])

# Normalize posterior probabilities at each N
sum_post_probs = post_probs_h3 + post_probs_h4
norm_post_probs_h3 = post_probs_h3 / sum_post_probs
norm_post_probs_h4 = post_probs_h4 / sum_post_probs

# Plot the posterior probabilities for h3 and h4
plt.figure(figsize=(14, 7))
plt.plot(range(1, 101), norm_post_probs_h3, label='P(h3|d1,...,dN)', color='blue')
plt.plot(range(1, 101), norm_post_probs_h4, label='P(h4|d1,...,dN)', color='green')
plt.xlabel('Number of observations in d')
plt.ylabel('Posterior probability of hypothesis')
plt.title('Posterior probabilities P(hi|d1,...,dN) for h3 and h4')
plt.legend()
plt.show()
